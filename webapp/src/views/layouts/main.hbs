<!doctype html>
<html lang="de">

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1" , charset='UTF-8'>
  <title>{{ title }}</title>
  <link rel="stylesheet" href="/styles/bootstrap.min.css">
  <link rel="stylesheet" href="/styles/main.css">
</head>

<script src="/js/jquery-3.3.1.min.js" 
  crossorigin="anonymous"></script>
<script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')</script>


<body>
  <nav class="navbar navbar-expand-sm navbar-dark bg-dark">
    <a class="navbar-brand" href="#">HSS Schuelererfassung</a>
    <ul class="navbar-nav mr-auto">
      <li class="nav-item">
        <a class="nav-link" href="/schueler">Schueler</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/lehrer">Lehrer</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/admin">Admin</a>
      </li>
    </ul>

    <ul class="navbar-nav">

      <li class="nav-item dropdown">
        <button class="btn dropdown-toggle" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true"
          aria-expanded="false">
          User: {{#if user}}{{user}}{{else}}{{/if}}
        </button>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
          {{#if user}}
          <a class="dropdown-item" href="logout">Logout</a>
          <a class="dropdown-item" data-toggle="modal" data-target="#UserPWChangeDialog">Passwort ändern</a>
          {{else}}
          <a class="dropdown-item" href="login">Login</a>
          {{/if}}
        </div>
      </li>


    </ul>

  </nav>

  <main role="main">
    <!-- Main jumbotron for a primary marketing message or call to action -->
    <div class="jumbotron">
      {{{body}}}
    </div> <!-- /container -->
  </main>

  <!-- Bootstrap core JavaScript
    ================================================== -->
  <!-- Placed at the end of the document so the pages load faster -->
  <script src="/js/bootstrap.min.js"></script>
</body>

</html>

<div class="modal fade" id="UserPWChangeDialog" tabindex="-1" role="dialog" aria-labelledby="UserPWChangeDialogTitleLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Passwortänderung User: {{user}}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input id="UserPwChangeField1" class="form-control" autocomplete="new-password" type="password" placeholder="Passwort">
                <input id="UserPwChangeField2" class="form-control" autocomplete="new-password" type="password" placeholder="Wiederholung Passwort">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Abbrechen</button>
                <button onclick="changeUserPW()" type="button" class="btn btn-primary">Passwort Ändern</button>
            </div>
        </div>
    </div>
</div>

<script>
function changeUserPW() {
        var changeDialog = document.getElementById('UserPWChangeDialog')
        var pw1 = document.getElementById('UserPwChangeField1')
        var pw2 = document.getElementById('UserPwChangeField2')
        var body = document.getElementById('MainBody')
  console.log(pw1 + '   ' + pw2)
        if (pw1.value === pw2.value) {
            var xhr = new XMLHttpRequest();
            xhr.open("POST", '/admin/users/changePW', true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

            xhr.onreadystatechange = function () {
              console.log(this.readyState )
                if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
                    pw1.value = '';
                    pw2.value = '';
                    $('#UserPWChangeDialog').modal('hide'); console.log($)
                }
                if (this.readyState === XMLHttpRequest.DONE && this.status === 520) {
                    alert('Ein unbekannter Fehler ist aufgetreten')
                }
                if (this.readyState === XMLHttpRequest.DONE && this.status === 404) {
                    alert('Rest schnittstelle wurde nicht gefunden')
                }
            }
            xhr.send(serialize({ id: "{{userId}}", password: pw1.value }));
        } else {
            alert('Passwörter stimmen nicht überein')
        }
    }

    function serialize(obj) {
        var str = [];
        for (var p in obj)
            if (obj.hasOwnProperty(p)) {
                str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
            }
        return str.join("&");
    }
</script>

